import java.util.Scanner;
public class HeapsortTrace {
    
    public static void sort(Comparable[] a) {
        int N = a.length-1;

        for (int k = N / 2; k >= 1; k--){
        sink(a, k, N);
        for (int i = 1; i < a.length; i++)
            System.out.print(a[i]+" ");
            System.out.println();
        }

        while (N > 1) {
        exchange(a, 1, N);
        sink(a, 1, --N);

        for (int i = 1; i < a.length; i++)
            System.out.print(a[i]+" ");
            System.out.println();

        }
        }
        
        private static void sink(Comparable[] a, int k, int N) {
            while (2 * k <= N) {
                int j = 2 * k;
                if (j < N && less(a,j, j + 1))
                j++;
                if (!less(a,k, j)) break;
                exchange(a,k, j);
                k = j;
                }
        }
        private static boolean less(Comparable[] a, int i, int j) {
        	return ( a[i].compareTo(a[j]) < 0);
        }
        private static void exchange(Comparable[] a, int i, int j) {
            Comparable aux = a[i];
            a[i] = a[j];
            a[j] = aux;
        }

        public static void main(String[] args) {

        Scanner sc = new Scanner(System.in);
        char[] c = sc.nextLine().replaceAll("\\s+","").toCharArray();
        Character[] v = new Character[c.length+1];
        for (int i=1; i< v.length; i++)
        v[i] = c[i-1];
        sort(v);
        }

}
